version: '3.8'


# x-usr-mng-db-env: &usr_mng_db_env
#   DB_USER_MANAGEMENT_URI=mysql+pymysql://root:etf@db-user-management:3306/authentication


networks:
  usr-mng-sys-net:
  store-mng-sys-net:
  shared-blocklist-net:
  statistics-service-net:


services:


  # =====================================================================================
  # SHARED
  # =====================================================================================


  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - usr-mng-sys-net
      - store-mng-sys-net

  blocklist-redis:
    image: redis:alpine
    ports:
      - 6380:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - shared-blocklist-net


  # =====================================================================================
  # USER MANAGEMENT SYSTEM
  # =====================================================================================


  db-user-management:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=etf
    ports:
      - 3307:3306
    volumes:
      - type: bind
        source: ./databases/user_management/data
        target: /var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - usr-mng-sys-net

  migration-db-user-management:
    build:
      context: ../development/user_management_system/management/db_management_service
      dockerfile: ./Dockerfile
    ports:
      - 5004:5000
    depends_on:
      db-user-management:
        condition: service_healthy
    environment:
      # - DB_USER_MANAGEMENT_URI=*usr_mng_db_env
      - DB_USER_MANAGEMENT_URI=mysql+pymysql://root:etf@db-user-management:3306/authentication
      - PATH_LOGGING_DIR=./logs/
      - LOGGING_LEVEL=DEBUG
    volumes:
      - type: bind
        source: ./logs/user_management_system/db_management_service
        target: /usr/service/logs/
      # - type: bind
      #   source: ./databases/user_management/migrations
      #   target: /usr/service/migrations/
    networks:
      - usr-mng-sys-net

  authentication:
    build:
      context: ../development/user_management_system/authentication_service
      dockerfile: ./Dockerfile
    ports:
      - 5000:5000
    depends_on:
      migration-db-user-management:
        condition: service_completed_successfully
      blocklist-redis:
        condition: service_healthy
    environment:
      # - DB_USER_MANAGEMENT_URI=*usr_mng_db_env
      - DB_USER_MANAGEMENT_URI=mysql+pymysql://root:etf@db-user-management:3306/authentication
      - JWT_SECRET_KEY=JWT_SECRET_DEV_KEY
      - REDIS_BLOCKLIST_HOST=blocklist-redis
      - REDIS_BLOCKLIST_PORT=6379
      - REDIS_BLOCKLIST_DB=0
      - LOGGING_LEVEL=DEBUG
    volumes:
      - type: bind
        source: ./logs/user_management_system/authentication_service
        target: /usr/service/logs/
    networks:
      - usr-mng-sys-net
      - shared-blocklist-net


  # =====================================================================================
  # STORE MANAGEMENT SYSTEM
  # =====================================================================================


  db-store-management:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=etf
    ports:
      - 3308:3306
    volumes:
      - type: bind
        source: ./databases/store_management/data
        target: /var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - store-mng-sys-net
      - statistics-service-net

  migration-db-store-management:
    build:
      context: ../development/store_management_system/management/db_management_service
      dockerfile: ./Dockerfile
    ports:
      - 5005:5000
    depends_on:
      db-store-management:
        condition: service_healthy
    environment:
      # - DB_STORE_MANAGEMENT_URI=*store_mng_db_env
      - DB_STORE_MANAGEMENT_URI=mysql+pymysql://root:etf@db-store-management:3306/store_management
      - PATH_LOGGING_DIR=./logs/
      - LOGGING_LEVEL=DEBUG
    volumes:
      - type: bind
        source: ./logs/store_management_system/db_management_service
        target: /usr/service/logs/
      # - type: bind
      #   source: ./databases/store_management/migrations
      #   target: /usr/service/migrations/
    networks:
      - store-mng-sys-net

  owners-service:
    build:
      context: ../development/store_management_system/owners_service
      dockerfile: ./Dockerfile
      # dockerfile: ../development/store_management_system/owners_service/docker/Dockerfile
    ports:
      - 5001:5000
    depends_on:
      migration-db-store-management:
        condition: service_completed_successfully
      blocklist-redis:
        condition: service_healthy
      # statistics-service:
      #   condition: service_started
        # condition: service_healthy
    environment:
      # - DB_STORE_MANAGEMENT_URI=*store_mng_db_env
      - DB_STORE_MANAGEMENT_URI=mysql+pymysql://root:etf@db-store-management:3306/store_management
      - JWT_SECRET_KEY=JWT_SECRET_DEV_KEY
      - REDIS_BLOCKLIST_HOST=blocklist-redis
      - REDIS_BLOCKLIST_PORT=6379
      - REDIS_BLOCKLIST_DB=0
      - LOGGING_LEVEL=DEBUG
      - PATH_LOGGING_DIR=/usr/service/logs/
      - SPARK_STATISTICS_SERVICE_URL=http://statistics-service:5000
    volumes:
      - type: bind
        source: ./logs/store_management_system/owners_service
        target: /usr/service/logs/
    networks:
      - store-mng-sys-net
      - shared-blocklist-net
      - statistics-service-net

  customers-service:
    build:
      context: ../development/store_management_system/customers_service
      dockerfile: ./Dockerfile
    ports:
      - 5002:5000
    depends_on:
      migration-db-store-management:
        condition: service_completed_successfully
      blocklist-redis:
        condition: service_healthy
    environment:
      # - DB_STORE_MANAGEMENT_URI=*store_mng_db_env
      - DB_STORE_MANAGEMENT_URI=mysql+pymysql://root:etf@db-store-management:3306/store_management
      - JWT_SECRET_KEY=JWT_SECRET_DEV_KEY
      - REDIS_BLOCKLIST_HOST=blocklist-redis
      - REDIS_BLOCKLIST_PORT=6379
      - REDIS_BLOCKLIST_DB=0
      - LOGGING_LEVEL=DEBUG
    volumes:
      - type: bind
        source: ./logs/store_management_system/customers_service
        target: /usr/service/logs/
    networks:
      - store-mng-sys-net
      - shared-blocklist-net

  couriers-service:
    build:
      context: ../development/store_management_system/couriers_service
      dockerfile: ./Dockerfile
    ports:
      - 5003:5000
    depends_on:
      migration-db-store-management:
        condition: service_completed_successfully
      blocklist-redis:
        condition: service_healthy
    environment:
      # - DB_STORE_MANAGEMENT_URI=*store_mng_db_env
      - DB_STORE_MANAGEMENT_URI=mysql+pymysql://root:etf@db-store-management:3306/store_management
      - JWT_SECRET_KEY=JWT_SECRET_DEV_KEY
      - REDIS_BLOCKLIST_HOST=blocklist-redis
      - REDIS_BLOCKLIST_PORT=6379
      - REDIS_BLOCKLIST_DB=0
      - LOGGING_LEVEL=DEBUG
    volumes:
      - type: bind
        source: ./logs/store_management_system/couriers_service
        target: /usr/service/logs/
    networks:
      - store-mng-sys-net
      - shared-blocklist-net


  # =====================================================================================
  # STATISTICS SERVICE AND ITS SPARK CLUSTERS
  # =====================================================================================


  statistics-service:
    build:
      context: ../development/store_management_system/statistics_service/
      dockerfile: ./Dockerfile
    ports:
      - 5006:5000
    depends_on:
      db-store-management:
        condition: service_started
      spark-master:
        condition: service_started

    environment:
      - PRODUCT_STATISTICS_SPARK_MASTER_URL=spark://spark-master:7077
      - CATEGORY_STATISTICS_SPARK_MASTER_URL=spark://spark-master:7077
        # pymysql+mysql in URI will NOT work with jdbc:
      - DB_STORE_MANAGEMENT_URI=mysql://root:etf@db-store-management:3306/store_management
      - LOGGING_LEVEL=DEBUG
    volumes:
      - type: bind
        source: ./logs/store_management_system/statistics_service/log1.log
        target: /app/logs/log1.log
      - type: bind
        source: ./logs/store_management_system/statistics_service/product_statistics.log
        target: /app/logs/product_statistics.log
      - type: bind
        source: ./logs/store_management_system/statistics_service/category_statistics.log
        target: /app/logs/category_statistics.log
    # healthcheck:
    #   test: ["CMD", "telnet", "localhost", "5000"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 10
    #   start_period: 5s
    networks:
      - statistics-service-net

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - 8081:8080
      - 7077:7077
    environment:
      - INIT_DEAMON_STEP=setup_spark
    networks:
      - statistics-service-net

  spark-worker1-store-management:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - 8082:8081
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    networks:
      - statistics-service-net

  # spark-worker2-store-management:
  #   image: bde2020/spark-worker:3.3.0-hadoop3.3
  #   container_name: spark-worker-2
  #   depends_on:
  #     spark-master:
  #       condition: service_started
  #   ports:
  #     - 8083:8081
  #   environment:
  #     - SPARK_MASTER=spark://spark-master:7077
  #   networks:
  #     - statistics-service-net
